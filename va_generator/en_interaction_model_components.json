{
	"intents": {
		"getAllResultsPreviousQuery" : {
		    "name": "getAllResultsPreviousQuery",
		    "samples": [
		        "can you repeat the previous reply",
		        "can you list the results of the previous query",
		        "give me all the results"                      
		    ]
		},
		"getQueryExplanation" : {
		    "name": "getQueryExplanation",
		    "samples": [
		        "why did you reply in this way",
		        "can you explain me your reasoning approach",
		        "why did you say that"  
		    ]
		},
		"getFurtherDetails" : {
		    "name": "getFurtherDetails",
		    "samples": [
		        "can you provide me further details",
		        "give me further details"                        
		    ]
		},
		"getPropertyObject" : {
		    "name": "getPropertyObject",
		    "slots": [
		        {
		            "name": "property",
		            "type": "property"
		        },
		        {
		            "name": "entity",
		            "type": "entity"
		        }
		    ],
		    "samples": [
		    	"who is the {property} of {entity}",
		    	"who was the {property} of {entity}",

		    	"what are the {property} of {entity}",
		    	"what is the {property} of {entity}",

		    	"how {property} is {entity}",

		    	"how many {property} does {entity} have",
		    	"how much {property} does {entity} have",

		    	"give me the {property} of {entity}",

		    	"which is the {property} of {entity}",
		    	
		        "when is the {property} of {entity}"		      
		    ]
		},

		"getPropertySubject" : {
		    "name": "getPropertySubject",
		    "slots": [
		        {
		            "name": "property",
		            "type": "property"
		        },
		        {
		            "name": "entity",
		            "type": "entity"
		        }
		    ],
		    "samples": [
		        "which entity has {entity} as {property}",

		        "what have {entity} as {property}",
		        "what has {entity} as {property}",
		        "who has {entity} as {property}",

		        "what has {property} equals to {entity}",

		        "what is {entity} as {property}",

		        "how many entities have {entity} as {property}",
		        "how many entities have {property} like {entity}",

		        "list everything {property} by {entity}",
		        "give me everything {property} by {entity}",

		        "what is {property} by {entity}"
		    ]
		},
		
		"getClassInstances" : {
		    "name": "getClassInstances",
		    "slots": [
		        {
		            "name": "class",
		            "type": "entity"
		        }
		    ],
		    "samples": [
		    	"Give me all {class}",
		    	"how many {class} exist",
		    	"how many {class} are there"
		    ]
		},

		"getPropertySubjectByClass" : {
		    "name": "getPropertySubjectByClass",
		    "slots": [
		        {
		            "name": "class",
		            "type": "entity"
		        },
		        {
		            "name": "property",
		            "type": "property"
		        },
		        {
		            "name": "entity",
		            "type": "entity"
		        }
		    ],
		    "samples": [
		        "how many {class} has {property} like {entity}",
		        "which {class} has {property} like {entity}",
		        "which {class} has {entity} as {property}",
		        "which {class} is {property} by {entity}",
		        "how many {class} has {entity} as {property}",

		        "which {class} has {property} equals to {entity}",

		        "show me a list of {class} that {property} in the {entity}",

		        "which {class} were {property} in {entity}",
		        "which {class} were {property} on {entity}",
		        "which {class} were {property} by {entity}",

		        "give me all {class} that were {property} in {entity}",
		        "give me all {class} that {property} to {entity}",
		        "give me {class} whose {property} is equals to {entity}",
		        "give me {class} where {entity} is the {property}",

		        "what {class} does {entity} {property}",

		        "list all the {class} with {property} by {entity}",
		        		        		      		 		        
	   		    "how many {class} are {property} the {entity}"        

		    ]
		},

		"getDescription" : {
		    "name": "getDescription",
		    "slots": [
		        {
		            "name": "entity",
		            "type": "entity"
		        }
		    ],
		    "samples": [
		        "can you define {entity}",
		        "can you provide me the definition of {entity}",
		        "how can you define {entity}"
		    ]
		},
		"getNumericFilter" : {
		    "name": "getNumericFilter",
		    "slots": [
		        {
		            "name": "property",
		            "type": "property"
		        },
		        {
		            "name": "symbol",
		            "type": "symbol"
		        },
		        {
		            "name": "value",
		            "type": "AMAZON.NUMBER"
		        }
		    ],
		    "samples": [
		        "which entity has {property} {symbol} {value}",
		        "what entity has {property} {symbol} {value}",
		        "what does it have {property} {symbol} {value}"
		    ]
		},
		"getNumericFilterByClass" : {
		    "name": "getNumericFilterByClass",
		    "slots": [
		        {
		            "name": "class",
		            "type": "entity"
		        },
		        {
		            "name": "property",
		            "type": "property"
		        },
		        {
		            "name": "symbol",
		            "type": "symbol"
		        },
		        {
		            "name": "value",
		            "type": "AMAZON.NUMBER"
		        }
		    ],
		    "samples": [
		        "which {class} has {property} {symbol} {value}"
		    ]
		},
		"getTripleVerification" : {
		    "name": "getTripleVerification",
		    "slots": [
		        {
		            "name": "subj",
		            "type": "entity"
		        },
		        {
		            "name": "property",
		            "type": "property"
		        },
		        {
		            "name": "obj",
		            "type": "entity"
		        }
		    ],
		    "samples": [
		        "is it true that {subj} has {obj} as {property}",
		        "is it true that {obj} is the {property} of {subj}",
		        "can you verify if {subj} has {obj} as {property}",
		        "can you check if {subj} has {obj} as {property}"
		    ]
		},
		"getLocation" : {
		    "name": "getLocation",
		    "slots": [
		        {
		            "name": "entity",
		            "type": "entity"
		        }
		    ],
		    "samples": [
		        "where is {entity}",
		        "where is the {entity}"
		    ]
		},
		"getSuperlative" : {
		    "name": "getSuperlative",
		    "slots": [
		        {
		            "name": "entity",
		            "type": "entity"
		        },
		        {
		            "name": "property",
		            "type": "property"
		        },
		        {
		            "name": "superlative",
		            "type": "superlative"
		        }                        
		    ],
		    "samples": [
		        "what is the {entity} with {superlative} {property}"                    
		    ] 
		},
		"getImg" : {
		    "name": "getImg",
		    "slots": [
		        {
		            "name": "entity",
		            "type": "entity"
		        }
		    ],
		    "samples": [
		        "show me the {entity}",
		        "show me an {entity}",
		        "show me a {entity}",
		        "show me {entity}"
		    ]
		}
		
	},
	"slots" : {
		"superlative" : {
	        "name": "superlative",
	        "values": [
	            {
	                "name": {
	                    "value": "most",
	                    "synonyms" : [
	                        "maximum",
	                        "highest"
	                    ]
	                }
	            },
	            {
	                "name": {
	                    "value": "less",
	                    "synonyms" : [
	                        "minimum",
	                        "lowest"
	                    ]
	                }
	            }
	        ]
	    },
	    "symbol" : {
	        "name": "symbol",
	        "values": [
	            {
	                "name": {
	                    "value": ">",
	                    "synonyms" : [
	                        "more",
	                        "more than",
	                        "later than"
	                    ]
	                }
	            },
	            {
	                "name": {
	                    "value": "<",
	                    "synonyms" : [
	                        "less",
	                        "less than",
	                        "before than"
	                    ]
	                }
	            },
	            {
	                "name": {
	                    "value": "=",
	                    "synonyms" : [
	                        "equals",
	                        "equals to"
	                    ]
	                }
	            }
	        ]
	    }
	}
}
